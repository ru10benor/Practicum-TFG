{
  "name": "ipfilter",
  "description": "A light-weight IP address based filtering system",
  "version": "0.0.4",
  "author": {
    "name": "Michael Schonfeld",
    "email": "michael@dwolla.com"
  },
  "dependencies": {
    "underscore": "1.3.3"
  },
  "devDependencies": {
    "mocha": "~1.4.2"
  },
  "keywords": [
    "middleware",
    "ipfilter",
    "ip filter",
    "ipban",
    "ip ban"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/dwolla/node-ipfilter.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "license": "BSD",
  "_npmUser": {
    "name": "dwolla",
    "email": "michael@dwolla.com"
  },
  "_id": "ipfilter@0.0.4",
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "_engineSupported": true,
  "_npmVersion": "1.1.16",
  "_nodeVersion": "v0.6.18",
  "_defaultsLoaded": true,
  "dist": {
    "shasum": "4cc50d0bba98ecf23716895717b016322fb2a922",
    "tarball": "http://registry.npmjs.org/ipfilter/-/ipfilter-0.0.4.tgz"
  },
  "readme": "IP Filter: A light-weight IP address based filtering system\n=================================================================================\n\nThis package provides easy IP based access control. This can be achieved either by blacklisting certain IPs and whitelisting all others, or whitelisting certain IPs and blacklisting all others.\n\n[![Build Status](https://secure.travis-ci.org/Dwolla/node-ipfilter.png?branch=master)](http://travis-ci.org/Dwolla/node-ipfilter)\n\n## Version\n0.0.4\n\n## Requirements\n- [Node](http://github.com/ry/node)\n\n## Installation\n\nRecommended installation is with npm. To add node-ipfilter to your project, do:\n\n    npm install ipfilter\n\n## Usage with Express\n\nBlacklisting certain IP addresses, while allowing all other IPs:\n\n```javascript\n// Init dependencies\nvar express = require('express')\n    , ipfilter = require('ipfilter')\n    , app = express.createServer()\n    ;\n\n// Blacklist the following IPs\nvar ips = ['127.0.0.1'];\n\n// Create the server\napp.use(ipfilter(ips));\napp.listen(3000);\n```\n\nWhitelisting certain IP addresses, while denying all other IPs:\n\n```javascript\n// Init dependencies\nvar express = require('express')\n    , ipfilter = require('ipfilter')\n    , app = express.createServer()\n    ;\n\n// Blacklist the following IPs\nvar ips = ['127.0.0.1'];\n\n// Create the server\napp.use(ipfilter(ips, {mode: 'allow'}));\napp.listen(3000);\n```\n\n## Changelog\n\n0.0.4\n\n* Add tests\n* Update docs\n* Refactor, and restyle\n\n0.0.1\n\n* First revision\n\n## Credits\n\nMichael Schonfeld &lt;michael@dwolla.com&gt;\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 Dwolla &lt;michael@dwolla.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "maintainers": [
    {
      "name": "dwolla",
      "email": "michael@dwolla.com"
    }
  ],
  "directories": {},
  "_shasum": "4cc50d0bba98ecf23716895717b016322fb2a922",
  "_from": "ipfilter@",
  "_resolved": "https://registry.npmjs.org/ipfilter/-/ipfilter-0.0.4.tgz"
}
